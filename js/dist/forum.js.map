{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@datlechin/flarum-more-discussions/webpack/bootstrap","webpack://@datlechin/flarum-more-discussions/webpack/runtime/compat get default export","webpack://@datlechin/flarum-more-discussions/webpack/runtime/define property getters","webpack://@datlechin/flarum-more-discussions/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['forum/app']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@datlechin/flarum-more-discussions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['common/Component']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@datlechin/flarum-more-discussions/./src/forum/components/MoreDiscussions.tsx","webpack://@datlechin/flarum-more-discussions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datlechin/flarum-more-discussions/./src/forum/index.ts","webpack://@datlechin/flarum-more-discussions/./src/forum/helpers/insertAfter.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStream'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import app from 'flarum/forum/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport type Mithril from 'mithril';\nimport { ValueOrArray } from '@askvortsov/rich-icu-message-formatter';\nimport Model from 'flarum/common/Model';\n\nexport default class MoreDiscussions<CustomAttrs> extends Component {\n  loading: boolean = false;\n  discussions: Array<Model> = [];\n  limit: number = 0;\n  blockName: ValueOrArray<string> = '';\n  filterBy: string = '';\n  isRelated: boolean = false;\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.loading = true;\n    this.discussions = [];\n    this.limit = app.forum.attribute('datlechin-more-discussions.discussionLimit') || 5;\n    this.filterBy = app.forum.attribute('datlechin-more-discussions.filterBy');\n    this.blockName =\n      app.forum.attribute('datlechin-more-discussions.blockName') || app.translator.trans('datlechin-more-discussions.forum.block_default_name');\n    this.isRelated = app.forum.attribute('datlechin-more-discussions.isRelated');\n\n    this.load();\n  }\n\n  view(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    const discussions = this.discussions;\n    return (\n      <>\n        <div className=\"DiscussionList\">\n          <h2 className=\"MoreDiscussions-title\">{m.trust(this.blockName)}</h2>\n          <ul role=\"feed\" aria-busy={this.loading} className=\"DiscussionList-discussions\">\n            {this.loading ? (\n              <LoadingIndicator />\n            ) : (\n              discussions.map((discussion) => (\n                <li key={discussion.id()} data-id={discussion.id()} role=\"article\" aria-setsize=\"-1\">\n                  <DiscussionListItem discussion={discussion} params={{}} />\n                </li>\n              ))\n            )}\n          </ul>\n        </div>\n      </>\n    );\n  }\n\n  load() {\n    app.store\n      .find('discussions', {\n        page: {\n          limit: this.limit,\n        },\n        sort: this.filterBy,\n        filter: {\n          q: this.isRelated ? app.current.data.discussion.title() : null,\n        },\n      })\n      .then((results) => {\n        this.discussions = results;\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport MoreDiscussions from './components/MoreDiscussions';\nimport insertAfter from './helpers/insertAfter';\n\napp.initializers.add('datlechin/flarum-more-discussions', () => {\n  extend(PostStream.prototype, 'oncreate', function () {\n    const postStream: HTMLElement | null = document.querySelector('.PostStream');\n    if (!postStream) return;\n\n    const moreDiscussionRoot = document.createElement('div');\n    moreDiscussionRoot.classList.add('MoreDiscussions');\n    m.mount(insertAfter(moreDiscussionRoot, postStream), MoreDiscussions);\n  });\n});\n","export default function insertAfter(newNode: HTMLElement, referenceNode: Element) {\n  if (!referenceNode.parentNode) return;\n  return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","MoreDiscussions","_Component","subClass","superClass","_this","_len","arguments","length","args","Array","_key","apply","concat","loading","discussions","limit","blockName","filterBy","isRelated","create","constructor","_proto","oninit","vnode","this","app","attribute","trans","load","view","m","'['","className","trust","role","LoadingIndicator","map","discussion","id","DiscussionListItem","params","_this2","find","page","sort","filter","q","data","title","then","results","redraw","Component","add","extend","PostStream","postStream","document","querySelector","moreDiscussionRoot","createElement","classList","mount","newNode","referenceNode","parentNode","insertBefore","nextSibling","insertAfter"],"sourceRoot":""}