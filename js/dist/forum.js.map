{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@datlechin/flarum-more-discussions/./src/forum/components/MoreDiscussions.tsx","webpack://@datlechin/flarum-more-discussions/./src/forum/helpers/insertAfter.ts","webpack://@datlechin/flarum-more-discussions/./src/forum/index.ts","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['common/Component']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['forum/app']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@datlechin/flarum-more-discussions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datlechin/flarum-more-discussions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@datlechin/flarum-more-discussions/webpack/bootstrap","webpack://@datlechin/flarum-more-discussions/webpack/runtime/compat get default export","webpack://@datlechin/flarum-more-discussions/webpack/runtime/define property getters","webpack://@datlechin/flarum-more-discussions/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-more-discussions/webpack/runtime/make namespace object"],"sourcesContent":["import app from 'flarum/forum/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport type Mithril from 'mithril';\nimport { ValueOrArray } from '@askvortsov/rich-icu-message-formatter';\nimport Model from 'flarum/common/Model';\n\nexport default class MoreDiscussions<CustomAttrs> extends Component {\n  loading: boolean = false;\n  discussions: Array<Model> = [];\n  limit: number = 0;\n  blockName: ValueOrArray<string> = '';\n  filterBy: string = '';\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.loading = true;\n    this.discussions = [];\n    this.limit = app.forum.attribute('datlechin-more-discussions.discussionLimit') || 5;\n    this.filterBy = app.forum.attribute('datlechin-more-discussions.filterBy');\n    this.blockName =\n      app.forum.attribute('datlechin-more-discussions.blockName') || app.translator.trans('datlechin-more-discussions.forum.block_default_name');\n\n    this.load();\n  }\n\n  view(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    const discussions = this.discussions;\n    return (\n      <>\n        <div className=\"DiscussionList\">\n          <h2 className=\"MoreDiscussions-title\">{m.trust(this.blockName)}</h2>\n          <ul role=\"feed\" aria-busy={this.loading} className=\"DiscussionList-discussions\">\n            {this.loading ? (\n              <LoadingIndicator />\n            ) : (\n              discussions.map((discussion) => (\n                <li key={discussion.id()} data-id={discussion.id()} role=\"article\" aria-setsize=\"-1\">\n                  <DiscussionListItem discussion={discussion} params={{}} />\n                </li>\n              ))\n            )}\n          </ul>\n        </div>\n      </>\n    );\n  }\n\n  load() {\n    app.store\n      .find('discussions', {\n        page: {\n          limit: this.limit,\n        },\n        sort: this.filterBy,\n      })\n      .then((results) => {\n        this.discussions = results;\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","export default function insertAfter(newNode: HTMLElement, referenceNode: Element) {\n  if (!referenceNode.parentNode) return;\n  return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport MoreDiscussions from './components/MoreDiscussions';\nimport insertAfter from './helpers/insertAfter';\n\napp.initializers.add('datlechin/flarum-more-discussions', () => {\n  extend(PostStream.prototype, 'oncreate', function () {\n    const postStream: HTMLElement | null = document.querySelector('.PostStream');\n    if (!postStream) return;\n\n    const moreDiscussionRoot = document.createElement('div');\n    moreDiscussionRoot.classList.add('MoreDiscussions');\n    m.mount(insertAfter(moreDiscussionRoot, postStream), MoreDiscussions);\n  });\n});\n","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/DiscussionListItem'];","module.exports = flarum.core.compat['forum/components/PostStream'];","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["app","Component","DiscussionListItem","LoadingIndicator","MoreDiscussions","loading","discussions","limit","blockName","filterBy","oninit","vnode","forum","attribute","translator","trans","load","view","m","trust","map","discussion","id","store","find","page","sort","then","results","redraw","insertAfter","newNode","referenceNode","parentNode","insertBefore","nextSibling","extend","PostStream","initializers","add","prototype","postStream","document","querySelector","moreDiscussionRoot","createElement","classList","mount","setPrototypeOf","_inheritsLoose","subClass","superClass","Object","create","constructor","_setPrototypeOf","o","p","bind","__proto__"],"sourceRoot":""}