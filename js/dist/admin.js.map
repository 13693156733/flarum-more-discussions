{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA,IAAMC,MAAM,GAAG,4BAAf;AACA,IAAMC,aAAa,GAAGD,MAAM,GAAG,GAA/B;AACA,IAAME,YAAY,GAAGF,MAAM,GAAG,kBAA9B;AAEAD,wEAAA,CAAqB,mCAArB,EAA0D,YAAM;EAC9DA,4EAAA,CACOC,MADP,EAEGM,eAFH,CAEmB;IACfC,OAAO,EAAEN,aAAa,GAAG,YADV;IAEfO,KAAK,EAAEC,KAAK,CAAC,kBAAD,CAFG;IAGfC,IAAI,EAAED,KAAK,CAAC,iBAAD,CAHI;IAIfE,IAAI,EAAE;EAJS,CAFnB,EAQGL,eARH,CAQmB;IACfC,OAAO,EAAEN,aAAa,GAAG,kBADV;IAEfO,KAAK,EAAEC,KAAK,CAAC,wBAAD,CAFG;IAGfC,IAAI,EAAED,KAAK,CAAC,uBAAD,CAHI;IAIfE,IAAI,EAAE;EAJS,CARnB,EAcGL,eAdH,CAcmB;IACfC,OAAO,EAAEN,aAAa,GAAG,WADV;IAEfO,KAAK,EAAEC,KAAK,CAAC,iBAAD,CAFG;IAGfC,IAAI,EAAED,KAAK,CAAC,gBAAD,CAHI;IAIfE,IAAI,EAAE,QAJS;IAKfC,OAAO,EAAE;MACP,IAAIH,KAAK,CAAC,wBAAD,CADF;MAEP,iBAAiBA,KAAK,CAAC,qBAAD,CAFf;MAGP,cAAcA,KAAK,CAAC,wBAAD,CAHZ;MAIPI,SAAS,EAAEJ,KAAK,CAAC,wBAAD,CAJT;MAKP,YAAYA,KAAK,CAAC,qBAAD,CALV;MAMP,UAAUA,KAAK,CAAC,uBAAD;IANR,CALM;IAaf,WAAS;EAbM,CAdnB;AA6BD,CA9BD;;AAgCA,SAASA,KAAT,CAAeK,GAAf,EAA4B;EAC1B,OAAOf,wEAAA,CAAqBG,YAAY,GAAGY,GAApC,CAAP;AACD;;;;;;;;;;;ACxCD;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@datlechin/flarum-more-discussions/./src/admin/index.ts","webpack://@datlechin/flarum-more-discussions/external root \"flarum.core.compat['admin/app']\"","webpack://@datlechin/flarum-more-discussions/webpack/bootstrap","webpack://@datlechin/flarum-more-discussions/webpack/runtime/compat get default export","webpack://@datlechin/flarum-more-discussions/webpack/runtime/define property getters","webpack://@datlechin/flarum-more-discussions/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-more-discussions/webpack/runtime/make namespace object"],"sourcesContent":["import app from 'flarum/admin/app';\n\nconst prefix = 'datlechin-more-discussions';\nconst settingPrefix = prefix + '.';\nconst localePrefix = prefix + '.admin.settings.';\n\napp.initializers.add('datlechin/flarum-more-discussions', () => {\n  app.extensionData\n    .for(prefix)\n    .registerSetting({\n      setting: settingPrefix + 'block_name',\n      label: trans('block_name_label'),\n      help: trans('block_name_help'),\n      type: 'text',\n    })\n    .registerSetting({\n      setting: settingPrefix + 'discussion_limit',\n      label: trans('discussion_limit_label'),\n      help: trans('discussion_limit_help'),\n      type: 'number',\n    })\n    .registerSetting({\n      setting: settingPrefix + 'filter_by',\n      label: trans('filter_by_label'),\n      help: trans('filter_by_help'),\n      type: 'select',\n      options: {\n        '': trans('filter_dropdown.latest'),\n        '-commentCount': trans('filter_dropdown.top'),\n        '-createdAt': trans('filter_dropdown.newest'),\n        createdAt: trans('filter_dropdown.oldest'),\n        '-hotness': trans('filter_dropdown.hot'),\n        '-votes': trans('filter_dropdown.votes'),\n      },\n      default: '',\n    });\n});\n\nfunction trans(key: string) {\n  return app.translator.trans(localePrefix + key);\n}\n","module.exports = flarum.core.compat['admin/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["app","prefix","settingPrefix","localePrefix","initializers","add","extensionData","registerSetting","setting","label","trans","help","type","options","createdAt","key","translator"],"sourceRoot":""}